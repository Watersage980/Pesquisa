Teste funcional: O teste funcional envolve testes que avaliam as funcionalidades que o sistema deve executar. Os requisitos funcionais podem ser descritos, por exemplo, como especificações de 
requisitos de negócio, user stories, casos de uso ou especificações funcionais, podendo ainda não estar documentados. O projeto e a execução de testes funcionais podem envolver o recurso a
profissionais especializados numa determinada área ou competência, como o conhecimento específico de um problema de negócio que o software resolve, ou o papel específico que o software desempenha
ou deverá desempenhar.

Teste manual: Tal como o nome indica, o Teste Manual é a forma de uma aplicação ser testada por um ser humano, manualmente. Um especialista em garantia de qualidade (tester) que executa testes
manuais garante que a aplicação está a funcionar corretamente, seguindo as condições descritas nos casos de teste.O tester avalia o design, a funcionalidade e o desempenho da aplicação, verificando
ainda outros elementos. Os testes manuais são mais recomendados quando se utilizam testes exploratórios, testes de usabilidade e testes de aceitação.

Teste automático: Os Testes Automáticos implicam o desenvolvimento de testes programados para serem executados automaticamente, comparando os resultados reais com os resultados esperados.
Os Testes Automáticos são executados com o auxílio de ferramentas, scripts e software, sendo principalmente recomendados para realizar testes de regressão, testes de carga e testes de desempenho.

Teste de regressão: O teste de regressão é uma técnica do teste de software que consiste na aplicação de versões mais recente do software, para garantir que não surgiram novos defeitos em
componentes já analisados. Se, ao juntar o novo componente ou as suas alterações com os componentes restantes do sistema surgirem novos defeitos em componentes inalterados, então considera-se que o
sistema regrediu. Muitas vezes são usadas ferramentas específicas para o teste de regressão, chamadas de ferramentas de automação. Elas conseguem um resultado mais exato do teste executando
exatamente os passos seguidos para o teste das primeiras versões já que elas permitem a gravação do teste. 

Teste de desempenho: O teste de desempenho é uma classe de testes implementada e executada para caracterizar e avaliar as características relacionadas ao desempenho do destino do teste, como
perfis de sincronização, fluxo de execução, tempos de resposta e confiabilidade e limites operacionais.

Teste de aceitação: o teste de aceitação, tal como o teste de sistema, centra-se no comportamento e capacidade de todo um sistema ou produto. Pode produzir informações para avaliar a situação do 
sistema, no sentido da sua implementação e utilização pelo cliente final (utilizador). O teste de aceitação pode também satisfazer requisitos, obrigações normativas ou regulamentos.

Smoketest: Smoke testing ou teste de fumaça são testes básicos que verificam as funcionalidade básicas da aplicação, é um processo que deve ser executado de forma rápida para determinar se o
build ou a compilação da aplicação realizada está estável ou não. É uma confirmação para a equipe decidir se avança ou não para novos testes. Consiste em um conjunto mínimo de testes para validar
as principais funcionalidades.

Teste exploratório: O teste exploratório consiste em design de teste e execução do teste ao mesmo tempo. Isso é o oposto de teste com script (procedimentos de teste predefinidos, manuais ou
automatizados). Diferentes dos testes com script, os testes exploratórios não são definidos previamente e executados com exatidão conforme o plano.

Teste de confirmação: Quando são feitas alterações em um sistema, seja para corrigir um defeito ou por causa de uma funcionalidade nova ou variável, deve-se testar para confirmar se as alterações
corrigiram o defeito ou implementaram a funcionalidade corretamente e, principalmente, não causaram consequências adversas imprevistas. 

Teste de estresse: Teste de stress é realizado para submeter o software a situações extremas. Basicamente, o teste de stress baseia-se em testar os limites do software e avaliar seu comportamento.
Assim, avalia-se até quando o software pode ser exigido e quais as falhas (se existirem) decorrentes do teste. Os testes de stress são fundamentais em aplicações em que a eficiência seja
uma característica importante.

Teste de carga: O teste de carga simula cenários do mundo real em seus sites, aplicativos e sistemas. Através das informações coletadas durante e após os testes de carga, os desenvolvedores podem
medir os limites e obter insights sobre as métricas que podem ajudar a responder perguntas sobre o desempenho e funcionalidade do software.

Teste de volume: O teste de volume é utilizado para testar o desempenho do software sobre diferentes quantidades de dados que podem ou não ocorrer em uma situação real.

Teste de recuperação: O teste de recuperação visa observar a capacidade ou não do software de se recuperar de erros, defeitos e falhas, ele vê como o sistema responde a falha e se a recuperação
foi feita de forma correta.

Teste de segurança: O Teste de Segurança tem como meta garantir que o funcionamento da aplicação esteja exatamente como especificado. Verifica também se o software se comporta adequadamente mediante
as mais diversas tentativas ilegais de acesso, visando possíveis vulnerabilidades. Para isso, testa se todos os mecanismos de proteção embutidos na aplicação de fato a protegerão de acessos
indevidos.